CREATE SCHEMA BB_LEAGUE;
USE BB_LEAGUE;

DROP TABLE IF EXISTS LEAGUE_RECORDS;
CREATE TABLE LEAGUE_RECORDS (
	LEAGUE_ID INT NOT NULL PRIMARY KEY,
    ENTITY VARCHAR(20)
);

DROP TABLE IF EXISTS TEAM;
CREATE TABLE TEAM (
	LEAGUE_ID INT NOT NULL,
    SEASON_ID VARCHAR (6) NOT NULL,
    TEAM_NAME VARCHAR (30) NOT NULL,
    CITY VARCHAR (20) NOT NULL,
    STATE VARCHAR (2) NOT NULL,
    CONFERENCE VARCHAR (7),
    SALARY INT NOT NULL,
    SALARY_CAP INT NOT NULL,
    PRIMARY KEY (LEAGUE_ID,SEASON_ID),
    FOREIGN KEY (LEAGUE_ID) REFERENCES LEAGUE_RECORDS(LEAGUE_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

DROP TABLE IF EXISTS PLAYER;
CREATE TABLE PLAYER (
	LEAGUE_ID INT NOT NULL,
    SEASON_ID VARCHAR (6) NOT NULL,
    TEAM_NUMBER INT NOT NULL,
    FULL_NAME VARCHAR(20) NOT NULL,
    POSITION VARCHAR(20) NOT NULL,
    AGE TINYINT NOT NULL,
    SALARY BIGINT NOT NULL,
    TEAM_ID INT NOT NULL,
    PRIMARY KEY (LEAGUE_ID,SEASON_ID),
    UNIQUE(LEAGUE_ID),
    FOREIGN KEY (LEAGUE_ID) REFERENCES LEAGUE_RECORDS(LEAGUE_ID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (TEAM_ID) REFERENCES TEAM(LEAGUE_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

DROP TABLE IF EXISTS COACH;
CREATE TABLE COACH (
	LEAGUE_ID INT NOT NULL,
    SEASON_ID VARCHAR(6) NOT NULL,
    FULL_NAME VARCHAR(20) NOT NULL,
    POSITION VARCHAR(20) NOT NULL,
    SALARY INT NOT NULL,
    AGE INT NOT NULL,
    TEAM_ID INT NOT NULL,
    PRIMARY KEY (LEAGUE_ID,SEASON_ID),
    UNIQUE(LEAGUE_ID),
    FOREIGN KEY (LEAGUE_ID) REFERENCES LEAGUE_RECORDS(LEAGUE_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

DROP TABLE IF EXISTS REFEREE;
CREATE TABLE REFEREE (
	LEAGUE_ID INT NOT NULL PRIMARY KEY,
    FULL_NAME VARCHAR(20) NOT NULL,
    AGE INT NOT NULL,
    FOREIGN KEY (LEAGUE_ID) REFERENCES LEAGUE_RECORDS(LEAGUE_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

DROP TABLE IF EXISTS ARENA;
CREATE TABLE ARENA(
	ARENA_ID TINYINT PRIMARY KEY,
    ARENA_NAME VARCHAR(30) NOT NULL,
    CITY VARCHAR(20) NOT NULL,
    STATE VARCHAR(2) NOT NULL
);

DROP TABLE IF EXISTS SEASON;
CREATE TABLE SEASON(
	SEASON_ID VARCHAR(6) NOT NULL,
    SEASON_TYPE VARCHAR(10) NOT NULL,
    START_DATE DATE NOT NULL,
    END_DATE DATE NOT NULL,
    PRIMARY KEY(SEASON_ID,SEASON_TYPE)
);

DROP TABLE IF EXISTS GAME;
CREATE TABLE GAME (
	GAME_ID INT NOT NULL,
    SEASON_ID VARCHAR (6) NOT NULL,
    GAME_DATE DATE NOT NULL,
    SEASON_TYPE VARCHAR(20) NOT NULL,
    HOMETEAM_ID INT NOT NULL,
    AWAYTEAM_ID INT NOT NULL,
    REF_ID INT NOT NULL,
    ARENA_ID TINYINT NOT NULL,
    PRIMARY KEY(GAME_ID, SEASON_ID),
    FOREIGN KEY (HOMETEAM_ID) REFERENCES TEAM(LEAGUE_ID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (AWAYTEAM_ID) REFERENCES TEAM(LEAGUE_ID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (REF_ID) REFERENCES REFEREE(LEAGUE_ID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (ARENA_ID) REFERENCES ARENA(ARENA_ID) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (SEASON_ID,SEASON_TYPE) REFERENCES SEASON(SEASON_ID,SEASON_TYPE) ON DELETE CASCADE ON UPDATE CASCADE
);

DROP TABLE IF EXISTS GAME_STATS;
CREATE TABLE GAME_STATS(
	GAME_ID INT NOT NULL,
    SEASON_ID VARCHAR (6) NOT NULL,
    HOMETEAM_NAME VARCHAR(30) NOT NULL,
    AWAYTEAM_NAME VARCHAR(30) NOT NULL,
    HOMETEAM_POINTS INT NOT NULL,
    AWAYTEAM_POINTS INT NOT NULL,
    HOMETEAM_RESULT VARCHAR(5) NOT NULL,
    AWAYTEAM_RESULT VARCHAR(5) NOT NULL,
    PRIMARY KEY(GAME_ID,SEASON_ID),
    FOREIGN KEY (GAME_ID,SEASON_ID) REFERENCES GAME(GAME_ID,SEASON_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

DROP TABLE IF EXISTS LEAGUE_CHAMPS;
CREATE TABLE LEAGUE_CHAMPS(
	SEASON_ID INT NOT NULL PRIMARY KEY,
    TEAM_ID INT NOT NULL,
    FOREIGN KEY(TEAM_ID) REFERENCES LEAGUE_RECORDS(LEAGUE_ID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY(TEAM_ID) REFERENCES TEAM(LEAGUE_ID) ON DELETE CASCADE ON UPDATE CASCADE
);

DROP TABLE IF EXISTS AWARDS;
CREATE TABLE AWARDS(
	SEASON_ID VARCHAR(6) NOT NULL,
    AWARD_NAME VARCHAR(30) NOT NULL,
    AWARD_TYPE VARCHAR(10) NOT NULL,
    LEAGUE_ID INT NOT NULL,
    FOREIGN KEY (LEAGUE_ID) REFERENCES LEAGUE_RECORDS(LEAGUE_ID) ON DELETE CASCADE ON UPDATE CASCADE
);